{
    "swagger": "2.0",
    "info": {
        "description": "ZenZefi REST API provides operations for resources certificate, configuration, log, user, system",
        "version": "1.0",
        "title": "ZenZefi REST API"
    },
    "host": "localhost:61000",
    "basePath": "/",
    "tags": [
        {
            "name": "ZenZefi Certificate Management",
            "description": "Zenzefi Certificates Resource"
        },
        {
            "name": "loggers-mvc-endpoint",
            "description": "Loggers Mvc Endpoint"
        },
        {
            "name": "ZenZefi Configuration Management",
            "description": "Configurations Resource"
        },
        {
            "name": "shutdown-mvc-endpoint",
            "description": "Shutdown Mvc Endpoint"
        },
        {
            "name": "ZenZefi User Management",
            "description": "Users Resource"
        },
        {
            "name": "metrics-mvc-endpoint",
            "description": "Metrics Mvc Endpoint"
        },
        {
            "name": "ZenZefi Logging Management",
            "description": "Logs Resource"
        },
        {
            "name": "ZenZefi System Management",
            "description": "Zen Zefi System Resource"
        },
        {
            "name": "health-mvc-endpoint",
            "description": "Health Mvc Endpoint"
        }
    ],
    "paths": {
        "/certificates": {
            "get": {
                "tags": [
                    "ZenZefi Public API",
                    "ZenZefi Certificate Management"
                ],
                "summary": "Returns an array of certificates belonging to the current logged in user.",
                "operationId": "allUsingGET_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ZenZefiCertificate"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ZenZefi Public API",
                    "ZenZefi Certificate Management"
                ],
                "summary": "Deletes all certificates from current user-specific certificate store, or by authority key identifier and serial number. For details about the parameters, please view the request model.",
                "operationId": "deleteCertificates_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "all",
                        "in": "query",
                        "description": "If set to true, deletes all certificates.",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "in": "body",
                        "name": "pairs",
                        "description": "Base64 encoded authority key identifier / serial number pairs.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DeleteCertificateModel"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DeleteCertificatesResult"
                            }
                        }
                    },
                    "400": {
                        "description": "Empty input list. | Invalid authority key identifier. The length is 20 bytes. | The input is not Base64 encoded. | Invalid serial number. The max length is 16 bytes. | The certificate with id does not exist in current user-specific certificate store."
                    },
                    "404": {
                        "description": "Delete certificates called but no match was found."
                    }
                }
            }
        },
        "/certificates/activeForTesting": {
            "put": {
                "tags": [
                    "ZenZefi Certificate Management"
                ],
                "summary": "When the property CERT_SELECTION is set to MANUAL (test mode), ZenZefi returns only those certificates that have been actively selected by the user in the dashboard. Endpoint used only in the ZenZefi UI. For details about the parameters, please view the request model.",
                "operationId": "updateActiveForTesting",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "activeForTesting",
                        "description": "New selected certificate ID, old certificate ID(one which is deselected) and a boolean set to true if there is no previously checked certificate.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ActiveForTesting"
                        }
                    },
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Not found new certificate active for testing. | Not found old certificate active for testing. | Cannot switch active for testing"
                    },
                    "500": {
                        "description": "Configuration Invalid. Login rejected"
                    }
                }
            }
        },
        "/certificates/checkSystemIntegrity": {
            "get": {
                "tags": [
                    "ZenZefi Public API",
                    "ZenZefi Certificate Management"
                ],
                "summary": "Makes system integrity check and downloads the report. Endpoint used only in the ZenZefi CLI.",
                "operationId": "checkSystemIntegrity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/xml",
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/certificates/checkSystemIntegrityLog": {
            "get": {
                "tags": [
                    "ZenZefi Public API",
                    "ZenZefi Certificate Management"
                ],
                "summary": "Returns the system integrity check XML report. Endpoint used only in the ZenZefi UI.",
                "operationId": "getIntegrityCheckLogFile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/File"
                        }
                    },
                    "400": {
                        "description": "System integrity check xml report not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/certificates/checkSystemIntegrityLogExistance": {
            "get": {
                "tags": [
                    "ZenZefi Certificate Management"
                ],
                "summary": "Checks whether the system integrity report is still existent. Endpoint used only in the ZenZefi UI.",
                "operationId": "isIntegrityCheckLogXMLExistent",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/certificates/checkSystemIntegrityReport": {
            "get": {
                "tags": [
                    "ZenZefi Certificate Management"
                ],
                "summary": "Check system integrity without downloading the XML report. Endpoint used only in the ZenZefi UI.",
                "operationId": "checkSystemIntegrityWithoutReport",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SystemIntegrityCheckResultWithoutReport"
                        }
                    }
                }
            }
        },
        "/certificates/filter": {
            "get": {
                "tags": [
                    "ZenZefi Certificate Management"
                ],
                "summary": "Returns an array of filtered certificates belonging to the current logged in user. This endpoint is used in the ZenZefi UI, for filtering the certificates table.",
                "operationId": "filteredUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "allRequestParams",
                        "in": "query",
                        "description": "The filtering parameters, which also includes the limit for the query.",
                        "required": false,
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "validFrom",
                        "in": "query",
                        "description": "Valid from date. The date format is yyyy-MM-dd.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "validTo",
                        "in": "query",
                        "description": "Valid to date. The date format is yyyy-MM-dd.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Certificate"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/certificates/import/files": {
            "post": {
                "tags": [
                    "ZenZefi Certificate Management"
                ],
                "summary": "Not working from Swagger UI and Swagger Generated API. Imports certificates, .crt or .p12 files into current logged in user-specific certificate store. Operation used in the ZenZefi UI for importing.",
                "operationId": "Import Files",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "files",
                        "in": "query",
                        "description": "files",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "file"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ImportResult"
                            }
                        }
                    },
                    "400": {
                        "description": "Cannot read the multipart data from input"
                    }
                }
            }
        },
        "/certificates/import/fromLocal": {
            "post": {
                "tags": [
                    "ZenZefi Public API",
                    "ZenZefi Certificate Management"
                ],
                "summary": "Import certificates into current user-specific certificate store. For this endpoint the inputs are the certificate or PKCS12 file path, and password in the case of PKCS12.",
                "operationId": "importCertificatesFromPathsUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "localImportInputs",
                        "description": "File path / password pairs.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LocalImportInput"
                            }
                        }
                    },
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ImportResult"
                            }
                        }
                    },
                    "400": {
                        "description": "Cannot read the file from path"
                    }
                }
            }
        },
        "/certificates/list": {
            "get": {
                "tags": [
                    "ZenZefi Public API",
                    "ZenZefi Certificate Management"
                ],
                "summary": "Returns an array of certificates belonging to the current logged in user.",
                "operationId": "listCertificates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ZenZefiCertificateSummary"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/certificates/publicKeyFile/{id}": {
            "get": {
                "tags": [
                    "ZenZefi Certificate Management"
                ],
                "summary": "Retrives a file with the certificate's public key.",
                "operationId": "exportPublicKeyUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/asc"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the certificate. Must be valid UUID.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "Writing public key value to file failed. | Internal server error."
                    }
                }
            }
        },
        "/certificates/restore": {
            "post": {
                "tags": [
                    "ZenZefi Public API",
                    "ZenZefi Certificate Management"
                ],
                "summary": "Restore root and backend certificates from application binaries.",
                "operationId": "restoreCertificates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Restoring certificates failed"
                    }
                }
            }
        },
        "/certificates/search": {
            "get": {
                "tags": [
                    "ZenZefi Public API",
                    "ZenZefi Certificate Management"
                ],
                "summary": "Retrieve certificate by authority key identifier and serial number.",
                "operationId": "getCertByID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "AuthorityKeyIdentifier",
                        "in": "query",
                        "description": "The authority key identifier. It is sent as Base64 encoded bytes, and the length must be 20 bytes.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "SerialNumber",
                        "in": "query",
                        "description": "The serial number. It is sent as Base64 encoded bytes. The maximum length is 16 bytes.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CertificateResult"
                        }
                    },
                    "404": {
                        "description": "No certificate was found with given authority key identifier and serial number."
                    }
                }
            }
        },
        "/certificates/search/certificateReplacementPackage": {
            "post": {
                "tags": [
                    "ZenZefi Public API",
                    "ZenZefi Certificate Management"
                ],
                "summary": "Get certificate replacement package based on given criteria. For details about the parameters, please view the request model.",
                "operationId": "certificateReplacementPackage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "Base64 encoded certificate bytes, replacement target and target backend subject key identifier.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CertificateReplacementPackageInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CertificateReplacementPackageResult"
                        }
                    },
                    "404": {
                        "description": "Certificate replacement package not found. | No Certificate was found matching the filter criteria."
                    }
                }
            }
        },
        "/certificates/search/diag": {
            "get": {
                "tags": [
                    "ZenZefi Public API",
                    "ZenZefi Certificate Management"
                ],
                "summary": "Get Diagnostic Certificate based on given criteria.",
                "operationId": "diagCert",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "BackendCert-Subject-KeyIdentifier",
                        "in": "query",
                        "description": "The authority key identifier. It is sent as Base64 encoded bytes, and the length must be 20 bytes.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "TargetVIN",
                        "in": "query",
                        "description": "The target VIN. The size of the field is 17 characters.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "TargetECU",
                        "in": "query",
                        "description": "The target ECU. Maximum size of the field is 30 bytes.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "UserRole",
                        "in": "query",
                        "description": "The role of the user. E.g. DEVELOPMENT_ENHANCED, PRODUCTION, etc.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CertificateWithSNResult"
                        }
                    },
                    "400": {
                        "description": "Invalid subject key identifier. The length is 20 bytes. | Invalid target VIN. The length is 17 bytes. | Invalid target ECU. The max length is 30 bytes."
                    },
                    "404": {
                        "description": "No Certificate was found matching the filter criteria."
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/certificates/search/diag/active": {
            "get": {
                "tags": [
                    "ZenZefi Public API",
                    "ZenZefi Certificate Management"
                ],
                "summary": "Checks whether a call to get diagnosis certificate will return the certificate with the serial number provided as parameter.",
                "operationId": "checkActiveDiagCert",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "BackendCert-Subject-KeyIdentifier",
                        "in": "query",
                        "description": "The authority key identifier. It is sent as Base64 encoded bytes, and the length must be 20 bytes.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "DiagCertSerialNumber",
                        "in": "query",
                        "description": "The serial number. It is sent as Base64 encoded bytes. The maximum length is 16 bytes.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "TargetECU",
                        "in": "query",
                        "description": "The target ECU. Maximum size of the field is 30 bytes.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "TargetVIN",
                        "in": "query",
                        "description": "The target VIN. The size of the field is 17 characters.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "UserRole",
                        "in": "query",
                        "description": "The role of the user. E.g. DEVELOPMENT_ENHANCED, PRODUCTION, etc.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "Invalid subject key identifier. The length is 20 bytes. | Invalid serial number. The max length is 16 bytes. | Invalid target VIN. The length is 17 bytes. | Invalid target ECU. The max length is 30 bytes."
                    },
                    "404": {
                        "description": "No Certificate was found matching the filter criteria."
                    }
                }
            }
        },
        "/certificates/search/diag/checkOwnership": {
            "post": {
                "tags": [
                    "ZenZefi Public API",
                    "ZenZefi Certificate Management"
                ],
                "summary": "Searches for a certificate with the backend subject key identifier and serial number from the request and calculates the signature for ECUChallenge. For details about the parameters, please view the request model.",
                "operationId": "checkOwnership",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "checkOwnershipInput",
                        "description": "Base64 encoded backend subject key identifier, Base64 encoded ecu challange, Base64 encoded serial number.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CheckOwnershipInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Ownership"
                        }
                    },
                    "400": {
                        "description": "CheckOwnership validation failed."
                    },
                    "404": {
                        "description": "No certificate with given serial number found."
                    },
                    "409": {
                        "description": "More than one certificate found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/certificates/search/enhRights": {
            "get": {
                "tags": [
                    "ZenZefi Public API",
                    "ZenZefi Certificate Management"
                ],
                "summary": "Retrieve an enhanced rights certificate based on given criteria.",
                "operationId": "enhRights",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "BackendCert-Subject-KeyIdentifier",
                        "in": "query",
                        "description": "The backend subject key identifier. It is sent as Base64 encoded bytes. The length is 20 bytes.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "DiagCertSerialNumber",
                        "in": "query",
                        "description": "The serial number. It is sent as Base64 encoded bytes. The maximum length is 16 bytes.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "TargetECU",
                        "in": "query",
                        "description": "The target ECU. Maximum size of the field is 30 bytes.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "TargetVIN",
                        "in": "query",
                        "description": "The target VIN. The size of the field is 17 characters.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CertificateWithSNAndIssuerSNResult"
                            }
                        }
                    },
                    "404": {
                        "description": "No Certificate was found matching the filter criteria.",
                        "schema": {
                            "$ref": "#/definitions/ZenZefiResult"
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/certificates/search/secOCISCert": {
            "post": {
                "tags": [
                    "ZenZefi Public API",
                    "ZenZefi Certificate Management"
                ],
                "summary": "Retrieve a Sec OCIS certificate based on given criteria. For details about the parameters, please view the request model.",
                "operationId": "secOCISCert",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "secOCISInput",
                        "description": "Base64 encoded backend subject key identifier, Base64 encoded diag serial number, Base64 encoded ECU certificate, target ECU, target VIN.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SecOCISInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CertificateWithSNResult"
                        }
                    },
                    "404": {
                        "description": "Could not find diagnostic certificate."
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/certificates/search/secureVariantCoding": {
            "post": {
                "tags": [
                    "ZenZefi Public API",
                    "ZenZefi Certificate Management"
                ],
                "summary": "Retrieve a variant coding user certificate based on given criteria. For details about the parameters, please view the request model.",
                "operationId": "secureVariantCoding",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "secureVariantCodingInput",
                        "description": "Base64 encoded backend subject key identifier, Base64 representation of the data to be signed, target ECU, target VIN.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SecureVariantCodingInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/VariantCoding"
                        }
                    },
                    "400": {
                        "description": "Signing Coding String failed"
                    },
                    "404": {
                        "description": "No Certificate was found matching the filter criteria."
                    }
                }
            }
        },
        "/certificates/search/timeCert": {
            "get": {
                "tags": [
                    "ZenZefi Public API",
                    "ZenZefi Certificate Management"
                ],
                "summary": "Retrieve a time certificate based on given criteria.",
                "operationId": "timeCert",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "BackendCert-Subject-KeyIdentifier",
                        "in": "query",
                        "description": "The backend subject key identifier. It is sent as Base64 encoded bytes. The length is 20 bytes.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Nonce",
                        "in": "query",
                        "description": "The nonce. Must be Base64 encoded and have the length of 32 bytes.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "TargetVIN",
                        "in": "query",
                        "description": "The target VIN. The size of the field is 17 characters.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "TargetECU",
                        "in": "query",
                        "description": "The target ECU. Maximum size of the field is 30 bytes.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CertificateWithSNResult"
                        }
                    },
                    "400": {
                        "description": "Invalid format for the given ID. | Invalid subject key identifier. The length is 20 bytes. | Invalid authority key identifier. The length is 20 bytes. | Invalid nonce. The length is 32 bytes. | The input is not Base64 encoded. | Invalid target ECU. The max length is 30 bytes. | Invalid target VIN. The length is 17 bytes."
                    },
                    "404": {
                        "description": "No certificate found. | No certificate found for backend subject key identifier when creating CSR."
                    },
                    "406": {
                        "description": "Parent Certificate type is invalid! Only Backend Root and Diagnostic Authentication Certificate supported"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/certificates/signRequest": {
            "post": {
                "tags": [
                    "ZenZefi Certificate Management"
                ],
                "summary": "Creates a new certificate sign request, in current user-specific certificate store. For details about the parameters, please view the request model.",
                "operationId": "createCertificateSignRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "JSON"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "signRequest",
                        "description": "Base64 encoded authority key identifier, certificate type, Base64 encoded nonce, parent id, services, special ECU, subject, target ECU, target subject key identifier, target VIN, unique ECU id, user role, valid to.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CertificateSignRequest"
                        }
                    },
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Certificate"
                        }
                    },
                    "201": {
                        "schema": {
                            "$ref": "#/definitions/Certificate"
                        }
                    },
                    "400": {
                        "description": "Invalid format for the given ID. | Invalid subject key identifier. The length is 20 bytes. | Invalid authority key identifier. The length is 20 bytes. | Invalid nonce. The length is 32 bytes. | The input is not Base64 encoded. | Invalid unique ECU ID. The max length is 30 bytes. | Invalid special ECU. The length is 1 byte. | Invalid target ECU. The max length is 30 bytes. | Invalid target VIN. The length is 17 bytes."
                    },
                    "406": {
                        "description": "Parent Certificate type is invalid! Only Backend Root and Diagnostic Authentication Certificate supported"
                    },
                    "409": {
                        "description": "The provided certificate as parent does not exist in the current user-specific certificate store!"
                    },
                    "412": {
                        "description": "Enhanced Rights Certificate exist only in context of Diagnostic Authentication Certificate"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/certificates/signatureCheck": {
            "post": {
                "tags": [
                    "ZenZefi Public API",
                    "ZenZefi Certificate Management"
                ],
                "summary": "Checks message signature, signed by the input certificate. For details about the parameters, please view the request model.",
                "operationId": "signatureCheck",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "signatureCheckModel",
                        "description": "Base64 encoded ECU certificate, Base64 encoded message, Base64 encoded signature.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SignatureCheckHolder"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Signature check succeeded.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "Could not verify signature for message. | Wrong input. All parameters are mandatory."
                    },
                    "404": {
                        "description": "Could not create certificate from bytes input stream. | Could not check signature of the message for an enhanced rights certificate, no public key."
                    },
                    "500": {
                        "description": "Signature check failed."
                    }
                }
            }
        },
        "/certificates/{ids}": {
            "delete": {
                "tags": [
                    "ZenZefi Public API",
                    "ZenZefi Certificate Management"
                ],
                "summary": "Deletes one or more certificates from current user-specific certificate store. The deletion is made by certificate ids, and each certificate id must be a valid UUID. The ids are comma separated.",
                "operationId": "deleteCertificates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "ids",
                        "in": "path",
                        "description": "The ids of the certificates, comma separated. Must be valid UUIDs.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DeleteCertificatesResult"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid format for the given ID. | Delete certificates called but no match was found. | The certificate with id does not exist in current user-specific certificate store."
                    }
                }
            }
        },
        "/certificates/{id}": {
            "get": {
                "tags": [
                    "ZenZefi Certificate Management"
                ],
                "summary": "Returns a json representation of required certificate by id. The id must be a valid UUID.",
                "operationId": "getCertificateUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*",
                    "JSON"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the certificate. Must be valid UUID.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Certificate"
                        }
                    },
                    "400": {
                        "description": "Certificate does not exist | Invalid format for the given ID."
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/configurations": {
            "get": {
                "tags": [
                    "ZenZefi Configuration Management"
                ],
                "summary": "Returns an array of configurations, which are attached to current user (Default or Registered). Endpoint used in the ZenZefi UI.",
                "operationId": "getUserConfigurationsUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*",
                    "JSON"
                ],
                "parameters": [
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/configurations/applicationVersion": {
            "get": {
                "tags": [
                    "ZenZefi Configuration Management"
                ],
                "summary": "Returns the application version.",
                "operationId": "getApplicationVersion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Configuration"
                        }
                    }
                }
            }
        },
        "/configurations/certificatesColumnOrder": {
            "get": {
                "tags": [
                    "ZenZefi Configuration Management"
                ],
                "summary": "Gets the column order of the certificates table for the current logged user. Endpoint used in the ZenZefi UI.",
                "operationId": "certificatesColumnOrder",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ZenZefi Configuration Management"
                ],
                "summary": "Sets the column order of the certificates table for the current logged user. Endpoint used in the ZenZefi UI.",
                "operationId": "certificatesColumnOrder_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "columnOrder",
                        "description": "The column order.",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/configurations/certificatesColumnVisibility": {
            "get": {
                "tags": [
                    "ZenZefi Configuration Management"
                ],
                "summary": "Gets the column visibility of the certificates table for the current logged user. Endpoint used in the ZenZefi UI.",
                "operationId": "certificatesColumnVisibility",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ZenZefi Configuration Management"
                ],
                "summary": "Sets the column visibility of the certificates table for the current logged user. Endpoint used in the ZenZefi UI.",
                "operationId": "certificatesColumnVisibility_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "columnVisibilities",
                        "description": "Column visibilities.",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/configurations/detailsPanelState": {
            "get": {
                "tags": [
                    "ZenZefi Configuration Management"
                ],
                "summary": "Gets the details pane state of the certificates table for the current logged user. Endpoint used in the ZenZefi UI.",
                "operationId": "detailsPanelState",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/configurations/detailsPanelState/{state}": {
            "post": {
                "tags": [
                    "ZenZefi Configuration Management"
                ],
                "summary": "Sets the details pane state of the certificates table for the current logged user. Endpoint used in the ZenZefi UI.",
                "operationId": "detailsPanelState_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "state",
                        "in": "path",
                        "description": "The details pane state. Open or closed.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/configurations/general": {
            "get": {
                "tags": [
                    "ZenZefi Configuration Management"
                ],
                "summary": "Returns an array of general configurations, which are attached to default user. Endpoint used in the ZenZefi UI.",
                "operationId": "getGeneralConfigurationsUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*",
                    "JSON"
                ],
                "parameters": [
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/configurations/rolesPriority": {
            "get": {
                "tags": [
                    "ZenZefi Configuration Management"
                ],
                "summary": "Returns an array of user roles, attached to current user (default or registered). Endpoint used in the ZenZefi UI.",
                "operationId": "getRolePriorityConfigurationOfCurrentUserUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*",
                    "JSON"
                ],
                "parameters": [
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "ZenZefi Configuration Management"
                ],
                "summary": "Updates user roles configuration, for current user (default or registered). Endpoint used in the ZenZefi UI.",
                "operationId": "updateConfigurationRolesPriorityOfCurrentUserUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*",
                    "JSON"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "configuration",
                        "description": "The configuration.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Configuration"
                        }
                    },
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Configuration"
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/configurations/{id}": {
            "put": {
                "tags": [
                    "ZenZefi Configuration Management"
                ],
                "summary": "Update configuration. Endpoint used in the ZenZefi UI.",
                "operationId": "updateConfigurationUsingPUT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*",
                    "JSON"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the configuration. Must be a valid UUID.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "configuration",
                        "description": "The configuration.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Configuration"
                        }
                    },
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Configuration"
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/distinctLogLevels": {
            "get": {
                "tags": [
                    "ZenZefi Logging Management"
                ],
                "summary": "Returns the distinct log levels which are in the database. Endpoint used for the filtering on the UI logs table.",
                "operationId": "getDistinctLogLevelsUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "tags": [
                    "health-mvc-endpoint"
                ],
                "summary": "invoke",
                "operationId": "invokeUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/vnd.spring-boot.actuator.v1+json",
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/health.json": {
            "get": {
                "tags": [
                    "health-mvc-endpoint"
                ],
                "summary": "invoke",
                "operationId": "invokeUsingGET_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/vnd.spring-boot.actuator.v1+json",
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/loggers": {
            "get": {
                "tags": [
                    "loggers-mvc-endpoint"
                ],
                "summary": "invoke",
                "operationId": "invokeUsingGET_2",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/vnd.spring-boot.actuator.v1+json",
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/loggers.json": {
            "get": {
                "tags": [
                    "loggers-mvc-endpoint"
                ],
                "summary": "invoke",
                "operationId": "invokeUsingGET_3",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/vnd.spring-boot.actuator.v1+json",
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/loggers/{name}": {
            "get": {
                "tags": [
                    "loggers-mvc-endpoint"
                ],
                "summary": "get",
                "operationId": "getUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/vnd.spring-boot.actuator.v1+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "loggers-mvc-endpoint"
                ],
                "summary": "set",
                "operationId": "setUsingPOST",
                "consumes": [
                    "application/vnd.spring-boot.actuator.v1+json",
                    "application/json"
                ],
                "produces": [
                    "application/vnd.spring-boot.actuator.v1+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "configuration",
                        "description": "configuration",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/logs": {
            "get": {
                "tags": [
                    "ZenZefi Logging Management"
                ],
                "summary": "Downloads all the logs. Endpoint used in the ZenZefi UI, logs table.",
                "operationId": "allUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Log"
                            }
                        }
                    }
                }
            }
        },
        "/logs/archive": {
            "get": {
                "tags": [
                    "ZenZefi Logging Management"
                ],
                "summary": "Archives and downloads logs.",
                "operationId": "archiveUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/zip"
                ],
                "parameters": [
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "tags": [
                    "ZenZefi Logging Management"
                ],
                "summary": "Archives and downloads logs.",
                "operationId": "archiveUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "path",
                        "description": "The absolute path of where the archive should be saved.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ArchivePath"
                        }
                    },
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/logs/filter": {
            "get": {
                "tags": [
                    "ZenZefi Logging Management"
                ],
                "summary": "Filters the ZenZefi logs table. Endpoint used only in the ZenZefi UI.",
                "operationId": "getFilteredLogsUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "allRequestParams",
                        "in": "query",
                        "description": "The filtering parameters, which also includes the limit for the query.",
                        "required": false,
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "createTimestamp",
                        "in": "query",
                        "description": "Log create timestamp, sent as from date and to date pair.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "Range",
                        "in": "header",
                        "description": "Log filter range. E.g. items=0-9",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Log"
                            }
                        }
                    },
                    "400": {
                        "description": "Missing range"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/logs/getLogFile": {
            "get": {
                "tags": [
                    "ZenZefi Public API",
                    "ZenZefi Logging Management"
                ],
                "summary": "Get file with logs created since the last call. First call will return all available log entries.",
                "operationId": "getLogFile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/File"
                        }
                    },
                    "500": {
                        "description": "Download log file failed."
                    }
                }
            }
        },
        "/logs/logLevel": {
            "get": {
                "tags": [
                    "ZenZefi Logging Management"
                ],
                "summary": "Set configured log level for database logging.",
                "operationId": "setConfiguredLogLevelToLogging",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "LogLevel",
                        "in": "query",
                        "description": "The logging level. Accepted values: CONFIG, FINE, FINER, FINEST, INFO, SEVERE, WARNING.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/logs/loggers": {
            "get": {
                "tags": [
                    "ZenZefi Logging Management"
                ],
                "summary": "Get application loggers.",
                "operationId": "applicationLoggers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/logs/logsIntegrity": {
            "get": {
                "tags": [
                    "ZenZefi Logging Management"
                ],
                "summary": "Returns false if a single log entry was deleted from the database, true otherwise.",
                "operationId": "validateLogsIntegrity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*",
                    "JSON"
                ],
                "parameters": [
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/metrics": {
            "get": {
                "tags": [
                    "metrics-mvc-endpoint"
                ],
                "summary": "invoke",
                "operationId": "invokeUsingGET_4",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/vnd.spring-boot.actuator.v1+json",
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/metrics.json": {
            "get": {
                "tags": [
                    "metrics-mvc-endpoint"
                ],
                "summary": "invoke",
                "operationId": "invokeUsingGET_5",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/vnd.spring-boot.actuator.v1+json",
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/metrics/{name}": {
            "get": {
                "tags": [
                    "metrics-mvc-endpoint"
                ],
                "summary": "value",
                "operationId": "valueUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/vnd.spring-boot.actuator.v1+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/shutdown": {
            "post": {
                "tags": [
                    "shutdown-mvc-endpoint"
                ],
                "summary": "invoke",
                "operationId": "invokeUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/vnd.spring-boot.actuator.v1+json",
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/shutdown.json": {
            "post": {
                "tags": [
                    "shutdown-mvc-endpoint"
                ],
                "summary": "invoke",
                "operationId": "invokeUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/vnd.spring-boot.actuator.v1+json",
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/system/installationDetails": {
            "get": {
                "tags": [
                    "ZenZefi Logging Management"
                ],
                "summary": "Returns the instalation details of the running ZenZefi server.",
                "operationId": "installationDetailsUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InstallationDetails"
                            }
                        }
                    }
                }
            }
        },
        "/system/performance": {
            "get": {
                "tags": [
                    "ZenZefi Public API",
                    "ZenZefi System Management"
                ],
                "summary": "List performance audit entries.",
                "operationId": "listPerformanceAuditEntries",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PerformanceAuditSummary"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/system/version": {
            "get": {
                "tags": [
                    "ZenZefi Public API",
                    "ZenZefi System Management"
                ],
                "summary": "Gets ZenZefi server version and api version.",
                "operationId": "getVersionUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Version"
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "ZenZefi Public API",
                    "ZenZefi User Management"
                ],
                "summary": "Returns a list of users.",
                "operationId": "getUsersUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserData"
                            }
                        }
                    }
                }
            }
        },
        "/users/currentUser": {
            "get": {
                "tags": [
                    "ZenZefi Public API",
                    "ZenZefi User Management"
                ],
                "summary": "Checks if the current user is the default user. Endpoint used in the ZenZefi UI for automated logout.",
                "operationId": "currentUserUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "tags": [
                    "ZenZefi Public API",
                    "ZenZefi User Management"
                ],
                "summary": "Logs in a user in based on the provided data (UC53).",
                "operationId": "login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "user",
                        "description": "The user.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success. User logged in successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "406": {
                        "description": "Login Failed - Unknown Username or wrong combination of Username and Password"
                    },
                    "412": {
                        "description": "A User is already logged in. Please logoff first. Login rejected."
                    },
                    "500": {
                        "description": "Exception message"
                    }
                }
            }
        },
        "/users/logout": {
            "post": {
                "tags": [
                    "ZenZefi Public API",
                    "ZenZefi User Management"
                ],
                "summary": "Log out a user from ZenZefi.",
                "operationId": "logout",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users/register": {
            "post": {
                "tags": [
                    "ZenZefi User Management"
                ],
                "summary": "Registers a new user in ZenZefi.",
                "operationId": "registration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "user",
                        "description": "The user.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "201": {
                        "description": "Success. User Account has been created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "406": {
                        "description": "User validation failed for a field."
                    },
                    "500": {
                        "description": "Exception message"
                    }
                }
            }
        },
        "/users/{ids}": {
            "delete": {
                "tags": [
                    "ZenZefi Public API",
                    "ZenZefi User Management"
                ],
                "summary": "Deletes user accounts by id. The ids must valid UUIDs.",
                "operationId": "deleteUsersUsingDELETE",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "ids",
                        "in": "path",
                        "description": "Users ids, must be valid UUIDs, comma separated.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/certificates": {
            "get": {
                "tags": [
                    "ZenZefi Public API V1",
                    "ZenZefi Certificate Management"
                ],
                "summary": "Returns an array of certificates belonging to the current logged in user.",
                "operationId": "allV1UsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ZenZefiCertificate"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ZenZefi Public API V1",
                    "ZenZefi Certificate Management"
                ],
                "summary": "Deletes all certificates from current user-specific certificate store, or by authority key identifier and serial number. For details about the parameters, please view the request model.",
                "operationId": "deleteCertificatesV1_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "all",
                        "in": "query",
                        "description": "If set to true, deletes all certificates.",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "in": "body",
                        "name": "pairs",
                        "description": "Base64 encoded authority key identifier / serial number pairs.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DeleteCertificateModel"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DeleteCertificatesResult"
                            }
                        }
                    },
                    "400": {
                        "description": "Empty input list. | Invalid authority key identifier. The length is 20 bytes. | The input is not Base64 encoded. | Invalid serial number. The max length is 16 bytes. | The certificate with id does not exist in current user-specific certificate store."
                    },
                    "404": {
                        "description": "Delete certificates called but no match was found."
                    }
                }
            }
        },
        "/v1/certificates/checkSystemIntegrity": {
            "get": {
                "tags": [
                    "ZenZefi Public API V1",
                    "ZenZefi Certificate Management"
                ],
                "summary": "Makes system integrity check and downloads the report. Endpoint used only in the ZenZefi CLI.",
                "operationId": "checkSystemIntegrityV1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/xml",
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/certificates/checkSystemIntegrityLog": {
            "get": {
                "tags": [
                    "ZenZefi Public API V1",
                    "ZenZefi Certificate Management"
                ],
                "summary": "Returns the system integrity check XML report. Endpoint used only in the ZenZefi UI.",
                "operationId": "getIntegrityCheckLogFileV1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/File"
                        }
                    },
                    "400": {
                        "description": "System integrity check xml report not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/v1/certificates/import/fromLocal": {
            "post": {
                "tags": [
                    "ZenZefi Public API V1",
                    "ZenZefi Certificate Management"
                ],
                "summary": "Import certificates into current user-specific certificate store. For this endpoint the inputs are the certificate or PKCS12 file path, and password in the case of PKCS12.",
                "operationId": "importCertificatesFromPathsV1UsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "localImportInputs",
                        "description": "File path / password pairs.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LocalImportInput"
                            }
                        }
                    },
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ImportResult"
                            }
                        }
                    },
                    "400": {
                        "description": "Cannot read the file from path"
                    }
                }
            }
        },
        "/v1/certificates/importProductionCerts": {
            "post": {
                "tags": [
                    "ZenZefi Public API V1",
                    "ZenZefi Certificate Management"
                ],
                "summary": "Import encrypted PKCS#12 packages. The packages are exported from SigModul, and encrypted with the public key generated by ZenZefi. The packages are Base64 encoded. For details about the parameters, please view the request model.",
                "operationId": "importEncryptedPKCSPackageV1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "pkcsInput",
                        "description": "Base64 encoded backend subject key identifier, encrypted PKCS package generated by SigModul.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EncryptedPKCSPackageInput"
                            }
                        }
                    },
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/EncryptedPKCSImportResult"
                        }
                    },
                    "400": {
                        "description": "User key pair for production not found. | Failed to decode the backend subject key identifier. | Failed to decode PKCS package for backend with subject key identifier. | Decryption of Certificate Package failed for backend with subject key identifier."
                    }
                }
            }
        },
        "/v1/certificates/list": {
            "get": {
                "tags": [
                    "ZenZefi Public API V1",
                    "ZenZefi Certificate Management"
                ],
                "summary": "Returns an array of certificates belonging to the current logged in user.",
                "operationId": "listCertificatesV1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ZenZefiCertificateSummary"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/v1/certificates/restore": {
            "post": {
                "tags": [
                    "ZenZefi Public API V1",
                    "ZenZefi Certificate Management"
                ],
                "summary": "Restore root and backend certificates from application binaries.",
                "operationId": "restoreCertificatesV1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Restoring certificates failed"
                    }
                }
            }
        },
        "/v1/certificates/search": {
            "get": {
                "tags": [
                    "ZenZefi Public API V1",
                    "ZenZefi Certificate Management"
                ],
                "summary": "Retrieve certificate by authority key identifier and serial number.",
                "operationId": "getCertByIDV1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "AuthorityKeyIdentifier",
                        "in": "query",
                        "description": "The authority key identifier. It is sent as Base64 encoded bytes, and the length must be 20 bytes.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "SerialNumber",
                        "in": "query",
                        "description": "The serial number. It is sent as Base64 encoded bytes. The maximum length is 16 bytes.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CertificateResult"
                        }
                    },
                    "404": {
                        "description": "No certificate was found with given authority key identifier and serial number."
                    }
                }
            }
        },
        "/v1/certificates/search/certificateReplacementPackage": {
            "post": {
                "tags": [
                    "ZenZefi Public API V1",
                    "ZenZefi Certificate Management"
                ],
                "summary": "Get certificate replacement package based on given criteria. For details about the parameters, please view the request model.",
                "operationId": "certificateReplacementPackageV1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "input",
                        "description": "Base64 encoded certificate bytes, replacement target and target backend subject key identifier.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CertificateReplacementPackageInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CertificateReplacementPackageResult"
                        }
                    },
                    "404": {
                        "description": "Certificate replacement package not found. | No Certificate was found matching the filter criteria."
                    }
                }
            }
        },
        "/v1/certificates/search/diag": {
            "get": {
                "tags": [
                    "ZenZefi Public API V1",
                    "ZenZefi Certificate Management"
                ],
                "summary": "Get Diagnostic Certificate based on given criteria.",
                "operationId": "diagCertV1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "BackendCert-Subject-KeyIdentifier",
                        "in": "query",
                        "description": "The authority key identifier. It is sent as Base64 encoded bytes, and the length must be 20 bytes.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "TargetVIN",
                        "in": "query",
                        "description": "The target VIN. The size of the field is 17 characters.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "TargetECU",
                        "in": "query",
                        "description": "The target ECU. Maximum size of the field is 30 bytes.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "UserRole",
                        "in": "query",
                        "description": "The role of the user. E.g. DEVELOPMENT_ENHANCED, PRODUCTION, etc.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CertificateWithSNResult"
                        }
                    },
                    "400": {
                        "description": "Invalid subject key identifier. The length is 20 bytes. | Invalid target VIN. The length is 17 bytes. | Invalid target ECU. The max length is 30 bytes."
                    },
                    "404": {
                        "description": "No Certificate was found matching the filter criteria."
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/v1/certificates/search/diag/active": {
            "get": {
                "tags": [
                    "ZenZefi Public API V1",
                    "ZenZefi Certificate Management"
                ],
                "summary": "Checks whether a call to get diagnosis certificate will return the certificate with the serial number provided as parameter.",
                "operationId": "checkActiveDiagCertV1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "BackendCert-Subject-KeyIdentifier",
                        "in": "query",
                        "description": "The authority key identifier. It is sent as Base64 encoded bytes, and the length must be 20 bytes.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "DiagCertSerialNumber",
                        "in": "query",
                        "description": "The serial number. It is sent as Base64 encoded bytes. The maximum length is 16 bytes.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "TargetECU",
                        "in": "query",
                        "description": "The target ECU. Maximum size of the field is 30 bytes.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "TargetVIN",
                        "in": "query",
                        "description": "The target VIN. The size of the field is 17 characters.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "UserRole",
                        "in": "query",
                        "description": "The role of the user. E.g. DEVELOPMENT_ENHANCED, PRODUCTION, etc.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "Invalid subject key identifier. The length is 20 bytes. | Invalid serial number. The max length is 16 bytes. | Invalid target VIN. The length is 17 bytes. | Invalid target ECU. The max length is 30 bytes."
                    },
                    "404": {
                        "description": "No Certificate was found matching the filter criteria."
                    }
                }
            }
        },
        "/v1/certificates/search/diag/checkOwnership": {
            "post": {
                "tags": [
                    "ZenZefi Public API V1",
                    "ZenZefi Certificate Management"
                ],
                "summary": "Searches for a certificate with the backend subject key identifier and serial number from the request and calculates the signature for ECUChallenge. For details about the parameters, please view the request model.",
                "operationId": "checkOwnershipV1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "checkOwnershipInput",
                        "description": "Base64 encoded backend subject key identifier, Base64 encoded ecu challange, Base64 encoded serial number.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CheckOwnershipInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Ownership"
                        }
                    },
                    "400": {
                        "description": "CheckOwnership validation failed."
                    },
                    "404": {
                        "description": "No certificate found"
                    },
                    "409": {
                        "description": "More than one certificate found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/v1/certificates/search/enhRights": {
            "get": {
                "tags": [
                    "ZenZefi Public API V1",
                    "ZenZefi Certificate Management"
                ],
                "summary": "Retrieve an enhanced rights certificate based on given criteria.",
                "operationId": "enhRightsV1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "BackendCert-Subject-KeyIdentifier",
                        "in": "query",
                        "description": "The backend subject key identifier. It is sent as Base64 encoded bytes. The length is 20 bytes.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "DiagCertSerialNumber",
                        "in": "query",
                        "description": "The serial number. It is sent as Base64 encoded bytes. The maximum length is 16 bytes.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "TargetECU",
                        "in": "query",
                        "description": "The target ECU. Maximum size of the field is 30 bytes.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "TargetVIN",
                        "in": "query",
                        "description": "The target VIN. The size of the field is 17 characters.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CertificateWithSNAndIssuerSNResult"
                            }
                        }
                    },
                    "404": {
                        "description": "No Certificate was found matching the filter criteria.",
                        "schema": {
                            "$ref": "#/definitions/ZenZefiResult"
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/v1/certificates/search/secOCISCert": {
            "post": {
                "tags": [
                    "ZenZefi Public API V1",
                    "ZenZefi Certificate Management"
                ],
                "summary": "Retrieve a Sec OCIS certificate based on given criteria. For details about the parameters, please view the request model.",
                "operationId": "secOCISCertV1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "secOCISInput",
                        "description": "Base64 encoded backend subject key identifier, Base64 encoded diag serial number, Base64 encoded ECU certificate, target ECU, target VIN.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SecOCISInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CertificateWithSNResult"
                        }
                    },
                    "404": {
                        "description": "Could not find diagnostic certificate."
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/v1/certificates/search/secureVariantCoding": {
            "post": {
                "tags": [
                    "ZenZefi Public API V1",
                    "ZenZefi Certificate Management"
                ],
                "summary": "Retrieve a variant coding user certificate based on given criteria. For details about the parameters, please view the request model.",
                "operationId": "secureVariantCodingV1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "secureVariantCodingInput",
                        "description": "Base64 encoded backend subject key identifier, Base64 representation of the data to be signed, target ECU, target VIN.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SecureVariantCodingInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/VariantCoding"
                        }
                    },
                    "400": {
                        "description": "Signing Coding String failed"
                    },
                    "404": {
                        "description": "No Certificate was found matching the filter criteria."
                    }
                }
            }
        },
        "/v1/certificates/search/timeCert": {
            "get": {
                "tags": [
                    "ZenZefi Public API V1",
                    "ZenZefi Certificate Management"
                ],
                "summary": "Retrieve a time certificate based on given criteria.",
                "operationId": "timeCertV1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "BackendCert-Subject-KeyIdentifier",
                        "in": "query",
                        "description": "The backend subject key identifier. It is sent as Base64 encoded bytes. The length is 20 bytes.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Nonce",
                        "in": "query",
                        "description": "The nonce. Must be Base64 encoded and have the length of 32 bytes.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "TargetVIN",
                        "in": "query",
                        "description": "The target VIN. The size of the field is 17 characters.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "TargetECU",
                        "in": "query",
                        "description": "The target ECU. Maximum size of the field is 30 bytes.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CertificateWithSNResult"
                        }
                    },
                    "400": {
                        "description": "Invalid format for the given ID. | Invalid authority key identifier. The length is 20 bytes. | Invalid nonce. The length is 32 bytes. | The input is not Base64 encoded. | Invalid target ECU. The max length is 30 bytes. | Invalid target VIN. The length is 17 bytes."
                    },
                    "404": {
                        "description": "No certificate found. | No certificate found for backend subject key identifier when creating CSR."
                    },
                    "406": {
                        "description": "Parent Certificate type is invalid! Only Backend Root and Diagnostic Authentication Certificate supported"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/v1/certificates/signatureCheck": {
            "post": {
                "tags": [
                    "ZenZefi Public API V1",
                    "ZenZefi Certificate Management"
                ],
                "summary": "Checks message signature, signed by the input certificate. For details about the parameters, please view the request model.",
                "operationId": "signatureCheckV1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "signatureCheckModel",
                        "description": "Base64 encoded ECU certificate, Base64 encoded message, Base64 encoded signature.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SignatureCheckHolder"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Signature check succeeded.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "Could not verify signature for message. | Wrong input. All parameters are mandatory."
                    },
                    "404": {
                        "description": "Could not create certificate from bytes input stream. | Could not check signature of the message for an enhanced rights certificate, no public key."
                    },
                    "500": {
                        "description": "Signature check failed."
                    }
                }
            }
        },
        "/v1/certificates/{ids}": {
            "delete": {
                "tags": [
                    "ZenZefi Public API V1",
                    "ZenZefi Certificate Management"
                ],
                "summary": "Deletes one or more certificates from current user-specific certificate store. The deletion is made by certificate ids, and each certificate id must be a valid UUID. The ids are comma separated.",
                "operationId": "deleteCertificatesV1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "ids",
                        "in": "path",
                        "description": "The ids of the certificates, comma separated. Must be valid UUIDs.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DeleteCertificatesResult"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid format for the given ID. | The certificate with id does not exist in current user-specific certificate store."
                    },
                    "404": {
                        "description": "Delete certificates called but no match was found."
                    }
                }
            }
        },
        "/v1/logs/getLogFile": {
            "get": {
                "tags": [
                    "ZenZefi Public API V1",
                    "ZenZefi Logging Management"
                ],
                "summary": "Get file with logs created since the last call. First call will return all available log entries.",
                "operationId": "getLogFileV1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/File"
                        }
                    },
                    "500": {
                        "description": "Download log file failed."
                    }
                }
            }
        },
        "/v1/system/generateKeyPair": {
            "get": {
                "tags": [
                    "ZenZefi Public API V1",
                    "ZenZefi System Management"
                ],
                "summary": "Key Pair generation. Used for communication with other systems. SigModul uses the generated public key to encrypt PKCS packages.",
                "operationId": "generateKeyPairUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The public key base64 encoded.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized operation 'generateKeyPair' for registered user."
                    }
                }
            }
        },
        "/v1/system/version": {
            "get": {
                "tags": [
                    "ZenZefi Public API V1",
                    "ZenZefi System Management"
                ],
                "summary": "Gets ZenZefi server version and api version.",
                "operationId": "getVersionV1UsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Version"
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/v1/users/login": {
            "post": {
                "tags": [
                    "ZenZefi Public API V1",
                    "ZenZefi User Management"
                ],
                "summary": "Logs in a user in based on the provided data (UC53).",
                "operationId": "loginV1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "user",
                        "description": "The user.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success. User logged in successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "406": {
                        "description": "Login Failed - Unknown Username or wrong combination of Username and Password"
                    },
                    "412": {
                        "description": "A User is already logged in. Please logoff first. Login rejected."
                    },
                    "500": {
                        "description": "Exception message"
                    }
                }
            }
        },
        "/v1/users/logout": {
            "post": {
                "tags": [
                    "ZenZefi Public API V1",
                    "ZenZefi User Management"
                ],
                "summary": "Log out a user from ZenZefi.",
                "operationId": "logoutV1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "Locale",
                        "in": "header",
                        "description": "The language for the operation. E.g. en, de",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Business id which identifies the request and business case.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ActiveForTesting": {
            "type": "object",
            "required": [
                "oldActiveForTestingId"
            ],
            "properties": {
                "newActiveForTestingId": {
                    "type": "string",
                    "description": "The id of the certificate. Must be valid UUID."
                },
                "oldActiveForTestingId": {
                    "type": "string",
                    "description": "The id of the certificate. Must be valid UUID."
                },
                "single": {
                    "type": "boolean",
                    "example": false,
                    "description": "True, if there is no previous certificate to be unchecked."
                }
            }
        },
        "ArchivePath": {
            "type": "object",
            "required": [
                "path"
            ],
            "properties": {
                "path": {
                    "type": "string",
                    "description": "The absolute path of where the archive should be saved."
                }
            }
        },
        "Certificate": {
            "type": "object",
            "properties": {
                "algorithmIdentifier": {
                    "type": "string"
                },
                "authorityKeyIdentifier": {
                    "type": "string"
                },
                "baseCertificateID": {
                    "type": "string"
                },
                "basicConstraintsText": {
                    "type": "string"
                },
                "hasChildren": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "issuer": {
                    "type": "string"
                },
                "issuerSerialNumber": {
                    "type": "string"
                },
                "keyUsageText": {
                    "type": "string"
                },
                "nonce": {
                    "type": "string"
                },
                "parentId": {
                    "type": "string"
                },
                "pkirole": {
                    "type": "string"
                },
                "prodQualifier": {
                    "type": "string"
                },
                "secOCISCert": {
                    "type": "boolean"
                },
                "serialNo": {
                    "type": "string"
                },
                "services": {
                    "type": "string"
                },
                "signature": {
                    "type": "string"
                },
                "signatureBase64": {
                    "type": "string"
                },
                "specialECU": {
                    "type": "string"
                },
                "state": {
                    "type": "string",
                    "enum": [
                        "ISSUED",
                        "SIGNING_REQUEST"
                    ]
                },
                "subject": {
                    "type": "string"
                },
                "subjectKeyIdentifier": {
                    "type": "string"
                },
                "subjectPublicKey": {
                    "type": "string"
                },
                "targetECU": {
                    "type": "string"
                },
                "targetSubjectKeyIdentifier": {
                    "type": "string"
                },
                "targetVIN": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "NO_TYPE",
                        "BACKEND_CA_CERTIFICATE",
                        "BACKEND_CA_LINK_CERTIFICATE",
                        "ROOT_CA_CERTIFICATE",
                        "ROOT_CA_LINK_CERTIFICATE",
                        "ECU_CERTIFICATE",
                        "DIAGNOSTIC_AUTHENTICATION_CERTIFICATE",
                        "ENHANCED_RIGHTS_CERTIFICATE",
                        "TIME_CERTIFICATE",
                        "VARIANT_CODE_USER_CERTIFICATE",
                        "VARIANT_CODING_DEVICE_CERTIFICATE"
                    ]
                },
                "uniqueECUID": {
                    "type": "string"
                },
                "userRole": {
                    "type": "string"
                },
                "validFrom": {
                    "type": "string"
                },
                "validTo": {
                    "type": "string"
                },
                "validityStrengthColor": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "CertificateReplacementPackageInput": {
            "type": "object",
            "required": [
                "certificate",
                "target"
            ],
            "properties": {
                "certificate": {
                    "type": "string",
                    "description": "Certificate bytes, Base64 encoded."
                },
                "target": {
                    "type": "string",
                    "description": "Replacement target. E. g.: ECU, BACKEND, ROOT",
                    "enum": [
                        "ECU",
                        "BACKEND",
                        "ROOT"
                    ]
                },
                "targetBackendCertSubjKeyId": {
                    "type": "string",
                    "description": "The backend subject key identifier. It is sent as Base64 encoded bytes. The length is 20 bytes."
                }
            }
        },
        "CertificateReplacementPackageResult": {
            "type": "object",
            "properties": {
                "backendCertificate": {
                    "type": "string"
                },
                "ecuCertificate": {
                    "type": "string"
                },
                "errorMessage": {
                    "type": "string"
                },
                "linkCertificate": {
                    "type": "string"
                },
                "rootCertificate": {
                    "type": "string"
                },
                "target": {
                    "type": "string",
                    "enum": [
                        "ECU",
                        "BACKEND",
                        "ROOT"
                    ]
                }
            }
        },
        "CertificateResult": {
            "type": "object",
            "properties": {
                "certificateData": {
                    "type": "string",
                    "description": "Certificate encoded bytes in base64 format"
                },
                "errorMessage": {
                    "type": "string"
                }
            }
        },
        "CertificateSignRequest": {
            "type": "object",
            "required": [
                "authorityKeyIdentifier",
                "certificateType",
                "validTo"
            ],
            "properties": {
                "authorityKeyIdentifier": {
                    "type": "string",
                    "description": "The authority key identifier. It is sent as Base64 encoded bytes, and the length must be 20 bytes."
                },
                "certificateType": {
                    "type": "string",
                    "description": "The certificate type. E.g. BACKEND_CA_CERTIFICATE, DIAGNOSTIC_AUTHENTICATION_CERTIFICATE, etc."
                },
                "nonce": {
                    "type": "string",
                    "description": "The nonce. Must be Base64 encoded and have the length of 32 bytes."
                },
                "parentId": {
                    "type": "string",
                    "description": "The parent certificate ID. Must be an UUID."
                },
                "services": {
                    "type": "string",
                    "description": "The services."
                },
                "specialECU": {
                    "type": "string",
                    "description": "Special ECU. Maximum size is 1 byte."
                },
                "subject": {
                    "type": "string",
                    "description": "The subject."
                },
                "targetECU": {
                    "type": "string",
                    "description": "The target ECU. Maximum size of the field is 30 bytes."
                },
                "targetSubjectKeyIdentifier": {
                    "type": "string",
                    "description": "The target subject key identifier."
                },
                "targetVIN": {
                    "type": "string",
                    "description": "The target VIN. The size of the field is 17 characters."
                },
                "uniqueECUID": {
                    "type": "string",
                    "description": "Unique ECU ID. Maximum length is 30 bytes."
                },
                "userRole": {
                    "type": "string",
                    "description": "The role of the user. E.g. DEVELOPMENT_ENHANCED, PRODUCTION, etc."
                },
                "validTo": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Valid to date. The date format is yyyy-MM-dd."
                }
            }
        },
        "CertificateSummary": {
            "type": "object",
            "properties": {
                "authorityKeyIdentifier": {
                    "type": "string"
                },
                "certificateType": {
                    "type": "string"
                },
                "errorMessage": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "issuer": {
                    "type": "string"
                },
                "serialNo": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                },
                "targetVIN": {
                    "type": "string"
                },
                "userRole": {
                    "type": "string"
                },
                "validFrom": {
                    "type": "integer",
                    "format": "int64"
                },
                "validTo": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "CertificateWithSNAndIssuerSNResult": {
            "type": "object",
            "properties": {
                "certificateData": {
                    "type": "string",
                    "description": "Certificate encoded bytes in base64 format"
                },
                "errorMessage": {
                    "type": "string"
                },
                "issuerSerialNumber": {
                    "type": "string",
                    "description": "Issuer serial number encoded bytes in base64 format"
                },
                "serialNumber": {
                    "type": "string",
                    "description": "Serial number encoded bytes in base64 format"
                }
            }
        },
        "CertificateWithSNResult": {
            "type": "object",
            "properties": {
                "certificateData": {
                    "type": "string",
                    "description": "Certificate encoded bytes in base64 format"
                },
                "errorMessage": {
                    "type": "string"
                },
                "serialNumber": {
                    "type": "string",
                    "description": "Serial number encoded bytes in base64 format"
                }
            }
        },
        "CheckOwnershipInput": {
            "type": "object",
            "required": [
                "backendCertSubjKeyId",
                "ecuChallenge",
                "serialNumber"
            ],
            "properties": {
                "backendCertSubjKeyId": {
                    "type": "string",
                    "description": "The backend subject key identifier. It is sent as Base64 encoded bytes. The length is 20 bytes."
                },
                "ecuChallenge": {
                    "type": "string",
                    "description": "ECU challange, Base64 encoded"
                },
                "serialNumber": {
                    "type": "string",
                    "description": "The serial number. It is sent as Base64 encoded bytes. The maximum length is 16 bytes."
                }
            }
        },
        "Configuration": {
            "type": "object",
            "properties": {
                "configKey": {
                    "type": "string"
                },
                "configValue": {
                    "type": "string"
                },
                "createTimestamp": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "DeleteCertificateModel": {
            "type": "object",
            "required": [
                "authorityKeyIdentifier",
                "serialNo"
            ],
            "properties": {
                "authorityKeyIdentifier": {
                    "type": "string",
                    "description": "The authority key identifier. It is sent as Base64 encoded bytes, and the length must be 20 bytes."
                },
                "serialNo": {
                    "type": "string",
                    "description": "The serial number. It is sent as Base64 encoded bytes. The maximum length is 16 bytes."
                }
            }
        },
        "DeleteCertificatesResult": {
            "type": "object",
            "properties": {
                "certificateType": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "EncryptedPKCSImportResult": {
            "type": "object",
            "properties": {
                "errorMessage": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                },
                "importResult": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ImportResult"
                    }
                }
            }
        },
        "EncryptedPKCSPackageInput": {
            "type": "object",
            "properties": {
                "backendSubjectKeyIdentifier": {
                    "type": "string",
                    "description": "The backend subject key identifier. It is sent as Base64 encoded bytes. The length is 20 bytes."
                },
                "encryptedPKCSPackage": {
                    "type": "string",
                    "description": "Encrypted PKCS package generated by SigModul."
                }
            }
        },
        "File": {
            "type": "object",
            "properties": {
                "absolute": {
                    "type": "boolean"
                },
                "absoluteFile": {
                    "$ref": "#/definitions/File"
                },
                "absolutePath": {
                    "type": "string"
                },
                "canonicalFile": {
                    "$ref": "#/definitions/File"
                },
                "canonicalPath": {
                    "type": "string"
                },
                "directory": {
                    "type": "boolean"
                },
                "file": {
                    "type": "boolean"
                },
                "freeSpace": {
                    "type": "integer",
                    "format": "int64"
                },
                "hidden": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "parent": {
                    "type": "string"
                },
                "parentFile": {
                    "$ref": "#/definitions/File"
                },
                "path": {
                    "type": "string"
                },
                "totalSpace": {
                    "type": "integer",
                    "format": "int64"
                },
                "usableSpace": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ImportResult": {
            "type": "object",
            "properties": {
                "authorityKeyIdentifier": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "subjectKeyIdentifier": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "InstallationDetails": {
            "type": "object",
            "properties": {
                "property": {
                    "type": "string"
                },
                "value": {
                    "type": "object"
                }
            }
        },
        "LocalImportInput": {
            "type": "object",
            "required": [
                "filePath"
            ],
            "properties": {
                "filePath": {
                    "type": "string",
                    "description": "Path of the file to be imported."
                },
                "password": {
                    "type": "string",
                    "description": "The certificate password, if needed."
                }
            }
        },
        "Log": {
            "type": "object",
            "properties": {
                "checksum": {
                    "type": "string"
                },
                "createTimestamp": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "preferredChecksum": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "valid": {
                    "type": "boolean"
                }
            }
        },
        "Ownership": {
            "type": "object",
            "required": [
                "ecuProofOfOwnership"
            ],
            "properties": {
                "ecuProofOfOwnership": {
                    "type": "string",
                    "description": "base64 encoded proof"
                },
                "errorMessage": {
                    "type": "string"
                }
            }
        },
        "PerformanceAuditSummary": {
            "type": "object",
            "properties": {
                "className": {
                    "type": "string"
                },
                "correlation_id": {
                    "type": "string"
                },
                "createTimestamp": {
                    "type": "integer",
                    "format": "int64"
                },
                "createUser": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer",
                    "format": "int64"
                },
                "id": {
                    "type": "string"
                },
                "methodName": {
                    "type": "string"
                },
                "projectRevision": {
                    "type": "string"
                },
                "projectVersion": {
                    "type": "string"
                },
                "updateTimestamp": {
                    "type": "string"
                },
                "updateUser": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                }
            }
        },
        "RolePriorityConfiguration": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "SecOCISInput": {
            "type": "object",
            "required": [
                "backendCertSubjKeyId",
                "diagCertSerialNumber",
                "ecuCertificate",
                "targetECU"
            ],
            "properties": {
                "backendCertSubjKeyId": {
                    "type": "string",
                    "description": "The backend subject key identifier. It is sent as Base64 encoded bytes. The length is 20 bytes."
                },
                "diagCertSerialNumber": {
                    "type": "string",
                    "description": "The serial number. It is sent as Base64 encoded bytes. The maximum length is 16 bytes."
                },
                "ecuCertificate": {
                    "type": "string",
                    "description": "Certificate bytes, Base64 encoded."
                },
                "targetECU": {
                    "type": "string",
                    "description": "The target ECU. Maximum size of the field is 30 bytes."
                },
                "targetVIN": {
                    "type": "string",
                    "description": "The target VIN. The size of the field is 17 characters."
                }
            }
        },
        "SecureVariantCodingInput": {
            "type": "object",
            "required": [
                "backendSubjectKeyIdentifier",
                "data"
            ],
            "properties": {
                "backendSubjectKeyIdentifier": {
                    "type": "string",
                    "description": "The backend subject key identifier. It is sent as Base64 encoded bytes. The length is 20 bytes."
                },
                "data": {
                    "type": "string",
                    "description": "Base64 representation of the data to be signed."
                },
                "targetECU": {
                    "type": "string",
                    "description": "The target ECU. Maximum size of the field is 30 bytes."
                },
                "targetVIN": {
                    "type": "string",
                    "description": "The target VIN. The size of the field is 17 characters."
                }
            }
        },
        "SignatureCheckHolder": {
            "type": "object",
            "required": [
                "ecuCertificate",
                "message",
                "signature"
            ],
            "properties": {
                "ecuCertificate": {
                    "type": "string",
                    "description": "Certificate bytes, Base64 encoded."
                },
                "message": {
                    "type": "string",
                    "description": "Base64 representation of the message which needs to be checked."
                },
                "signature": {
                    "type": "string",
                    "description": "Base64 representation of the signature."
                }
            }
        },
        "SystemIntegrityCheckError": {
            "type": "object",
            "properties": {
                "certificateId": {
                    "type": "string"
                },
                "errorMessages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "SystemIntegrityCheckResultWithoutReport": {
            "type": "object",
            "properties": {
                "integrityCheckErrors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SystemIntegrityCheckError"
                    }
                },
                "totalNumberOfCheckedCertificates": {
                    "type": "integer",
                    "format": "int32"
                },
                "totalNumberOfFailedChecks": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "User": {
            "type": "object",
            "required": [
                "firstName",
                "lastName",
                "organisation",
                "userName",
                "userPassword"
            ],
            "properties": {
                "createTimestamp": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string",
                    "description": "The first name. Length between 1 and 100 characters."
                },
                "id": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string",
                    "description": "The last name. Length between 1 and 100 characters."
                },
                "organisation": {
                    "type": "string",
                    "description": "The organisation. Length between 1 and 100 characters."
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "DEFAULT",
                        "REGULAR"
                    ]
                },
                "userName": {
                    "type": "string",
                    "description": "The user name. Length between 1 and 7 characters. Must be alpha numeric, non blank."
                },
                "userPassword": {
                    "type": "string",
                    "description": "The user password. Length between 9 and 100 characters. Must contain upper case, lower case, digit, and special characters."
                }
            }
        },
        "UserData": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                }
            }
        },
        "VariantCoding": {
            "type": "object",
            "properties": {
                "errorMessage": {
                    "type": "string"
                },
                "expirationDate": {
                    "type": "integer",
                    "format": "int64"
                },
                "serialNumber": {
                    "type": "string",
                    "description": "Serial number base64 string encoded"
                },
                "signature": {
                    "type": "string",
                    "description": "Signature base64 string encoded"
                },
                "varCodingCertificate": {
                    "type": "string",
                    "description": "Variant coding certificate base64 string encoded"
                }
            }
        },
        "Version": {
            "type": "object",
            "properties": {
                "apiVersion": {
                    "type": "string"
                },
                "serverVersion": {
                    "type": "string"
                }
            }
        },
        "Versioned": {
            "type": "object"
        },
        "ZenZefiCertificate": {
            "type": "object",
            "properties": {
                "activeForTesting": {
                    "type": "boolean"
                },
                "algorithmIdentifier": {
                    "type": "string"
                },
                "authorityKeyIdentifier": {
                    "type": "string"
                },
                "baseCertificateID": {
                    "type": "string"
                },
                "basicConstraintsText": {
                    "type": "string"
                },
                "hasChildren": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "issuer": {
                    "type": "string"
                },
                "issuerSerialNumber": {
                    "type": "string"
                },
                "keyUsageText": {
                    "type": "string"
                },
                "manualTestingActive": {
                    "type": "boolean"
                },
                "nonce": {
                    "type": "string"
                },
                "parentId": {
                    "type": "string"
                },
                "pkirole": {
                    "type": "string"
                },
                "prodQualifier": {
                    "type": "string"
                },
                "secOCISCert": {
                    "type": "boolean"
                },
                "serialNo": {
                    "type": "string"
                },
                "services": {
                    "type": "string"
                },
                "signature": {
                    "type": "string"
                },
                "signatureBase64": {
                    "type": "string"
                },
                "specialECU": {
                    "type": "string"
                },
                "state": {
                    "type": "string",
                    "enum": [
                        "ISSUED",
                        "SIGNING_REQUEST"
                    ]
                },
                "subject": {
                    "type": "string"
                },
                "subjectKeyIdentifier": {
                    "type": "string"
                },
                "subjectPublicKey": {
                    "type": "string"
                },
                "targetECU": {
                    "type": "string"
                },
                "targetSubjectKeyIdentifier": {
                    "type": "string"
                },
                "targetVIN": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "NO_TYPE",
                        "BACKEND_CA_CERTIFICATE",
                        "BACKEND_CA_LINK_CERTIFICATE",
                        "ROOT_CA_CERTIFICATE",
                        "ROOT_CA_LINK_CERTIFICATE",
                        "ECU_CERTIFICATE",
                        "DIAGNOSTIC_AUTHENTICATION_CERTIFICATE",
                        "ENHANCED_RIGHTS_CERTIFICATE",
                        "TIME_CERTIFICATE",
                        "VARIANT_CODE_USER_CERTIFICATE",
                        "VARIANT_CODING_DEVICE_CERTIFICATE"
                    ]
                },
                "uniqueECUID": {
                    "type": "string"
                },
                "userRole": {
                    "type": "string"
                },
                "validFrom": {
                    "type": "string"
                },
                "validTo": {
                    "type": "string"
                },
                "validityStrengthColor": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "ZenZefiCertificateSummary": {
            "type": "object",
            "properties": {
                "authorityKeyIdentifier": {
                    "type": "string"
                },
                "certificateType": {
                    "type": "string"
                },
                "errorMessage": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "issuer": {
                    "type": "string"
                },
                "nonce": {
                    "type": "string"
                },
                "serialNo": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                },
                "targetECU": {
                    "type": "string"
                },
                "targetVIN": {
                    "type": "string"
                },
                "userRole": {
                    "type": "string"
                },
                "validFrom": {
                    "type": "integer",
                    "format": "int64"
                },
                "validTo": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ZenZefiResult": {
            "type": "object",
            "properties": {
                "errorMessage": {
                    "type": "string"
                }
            }
        }
    }
}